<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="proj.pms.riskMgtPopup">

	<select id="selectList" parameterType="map" resultType="map">

		SELECT
			 RKIS_NO
			,ACDN_NM
			,SCN
			,PROJ_NO
			,PRRY_RNKG
			,AREA
			,DCRM_STEP
			,PGS_SITU
			,TO_CHAR(TO_DATE(A.DCRM_DT,'YYYY-MM-DD'),'YYYY-MM-DD') DCRM_DT
			,OCCU_PROB
			,IFLU_DEG
			,RSK_DEG
			,ACDN_SBC
			,CRGR_NM
			,TO_CHAR(TO_DATE(A.PARR_DT,'YYYY-MM-DD'),'YYYY-MM-DD') PARR_DT
			,PVNT_PLN
			,TO_CHAR(TO_DATE(A.TRTM_CONF_DT,'YYYY-MM-DD'),'YYYY-MM-DD') TRTM_CONF_DT
			,TRTM_MH
			,VBG_CRE_USER_ID as CRE_USER_ID
			,(SELECT USER_NAME FROM SYS_USER WHERE USER_ID = A.VBG_CRE_USER_ID) CRE_USER_NM
			,TO_CHAR(A.VBG_CRE_DT,'YYYY-MM-DD') CRE_DT
		FROM RISK_ISSUE A
		WHERE RKIS_NO = #{map.rkis_key}

	</select>

	<insert id="maintList" parameterType="map" >
	{CALL
		DECLARE
			PV_PROC_STEP VARCHAR2(100) :='START_PROGRAM';
			V_SEQ VARCHAR2(3) 	   := '';
			V_RKIS_NO VARCHAR2(20) := '';
			V_USER_CHK VARCHAR2(20)  := '';
			V_ERR_MSG VARCHAR2(100)  := '';

		BEGIN
			/* 사용자 ID CHECK */
			SELECT MAX(CRE_USER_ID)
			INTO V_USER_CHK
			FROM RISK_ISSUE
			WHERE RKIS_NO = #{map.rkis_no};

			IF #{_loginId_} != V_USER_CHK AND V_USER_CHK IS NOT NULL THEN
				V_ERR_MSG := '문서에 대한 권한이 없습니다.';
				RAISE_APPLICATION_ERROR(-20010, '문서에 대한 권한이 없습니다.' || '|' || PV_PROC_STEP);
			END IF;

			/* 관리대장번호 생성 */
			V_RKIS_NO := F_DOCNO('RKIS');

			/* 수정 */
			MERGE INTO RISK_ISSUE
			USING DUAL
				ON (RKIS_NO = #{map.rkis_no})
			WHEN MATCHED THEN
			UPDATE SET
				  ACDN_NM = #{map.acdn_nm}
				, PROJ_NO = #{map.proj_no}
				, PRRY_RNKG = #{map.prry_rnkg}
				, AREA = #{map.area}
				, DCRM_STEP = #{map.dcrm_step}
				, PGS_SITU = #{map.pgs_situ}
				, DCRM_DT = TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{map.dcrm_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD')
				, OCCU_PROB = #{map.occu_prob}
				, IFLU_DEG = #{map.iflu_deg}
				, RSK_DEG = #{map.rsk_deg}
				, ACDN_SBC = #{map.acdn_sbc}
				, CRGR_NM = #{map.crgr_nm}
				, PARR_DT = TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{map.parr_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD')
				, PVNT_PLN = #{map.pvnt_pln}
				, TRTM_CONF_DT = TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{map.trtm_conf_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD')
				, TRTM_MH = #{map.trtm_mh}
				, VBG_CRE_USER_ID = #{_loginId_}
				, VBG_CRE_DT = SYSDATE
			WHEN NOT MATCHED THEN
			/* 신규입력 */
			INSERT(
				RKIS_NO, ACDN_NM, SCN, PROJ_NO, PRRY_RNKG,
				AREA, DCRM_STEP, PGS_SITU, OCCU_PROB, IFLU_DEG, RSK_DEG,
				ACDN_SBC, CRGR_NM, PVNT_PLN, TRTM_MH,
				DCRM_DT, PARR_DT, TRTM_CONF_DT,
				VBG_CRE_USER_ID, VBG_CRE_DT, FIN_UPDR_ID, FIN_MDFY_DT
			)VALUES(
				V_RKIS_NO, #{map.acdn_nm}, 'R', #{map.proj_no}, #{map.prry_rnkg},
				#{map.area}, #{map.dcrm_step}, #{map.pgs_situ}, #{map.occu_prob}, #{map.iflu_deg}, #{map.rsk_deg},
				#{map.acdn_sbc}, #{map.crgr_nm}, #{map.pvnt_pln}, #{map.trtm_mh},
				TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{map.dcrm_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD'),
				TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{map.parr_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD'),
				TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{map.trtm_conf_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD'),
				#{_loginId_}, SYSDATE, #{_loginId_}, SYSDATE
			);
		END
	}
	</insert>

	<delete id="deleteList" parameterType="map">
		DELETE FROM RISK_ISSUE
		WHERE RKIS_NO = #{map.rkis_no}
	</delete>

</mapper>