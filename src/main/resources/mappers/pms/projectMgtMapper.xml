<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="proj.pms.projectMgt">

    <select id="selectList" parameterType="map" resultType="cMap">
	    <include refid="paging.head" /> <!-- 페이징 처리시 필수 -->
	    
	        SELECT
			    PROJ_NO,
			    PROJ_NM,
			    STRT_DT,
			    FNH_DT,
			    (SELECT
				F_PVTCOL(CURSOR(
				    SELECT TRWI_HPW
				      FROM PROJECT_DETAIL
				     WHERE PROJ_NO = A.PROJ_NO
				),',') TRWI_HPWS
				FROM DUAL) TRWI_HPWS,
			    ORDP_NM,
			    REM,
			    FIN_UPDR_ID,
			    (SELECT USER_NAME FROM SYS_USER WHERE USER_ID = A.FIN_UPDR_ID) UPD_USER_NM,
			    TO_CHAR(FIN_MDFY_DT,'YYYY-MM-DD HH24:MI:SS') FIN_MDFY_DT
			FROM PROJECT_MASTER A
			WHERE 1=1
	        <if test="map.proj_no != '' and map.proj_no != null">
	           AND PROJ_NO LIKE '%' || #{map.proj_no} || '%'
	        </if>
	        <if test="map.proj_nm != '' and map.proj_nm != null">
	           AND PROJ_NM LIKE '%' || #{map.proj_nm} || '%'
	        </if>
	        <if test="map.TRWI_HPW != '' and map.TRWI_HPW != null">
	           AND EXISTS (
	           		SELECT 1
	           		FROM PROJECT_DETAIL
	           		WHERE PROJ_NO = A.PROJ_NO
	           		AND TRWI_HPW LIKE '%' || #{map.trwi_hpw} || '%'
	           )
	        </if>
	        ORDER BY PROJ_NO
	        		
		<include refid="paging.bottom" /> <!-- 페이징 처리시 필수 -->
    </select>
    
    <insert id="maintList" parameterType="map" >
    {CALL
        DECLARE
			V_PROJ_NO VARCHAR2(20) := '';
        BEGIN
			/* 프로젝트번호 생성 */
			V_PROJ_NO := F_DOCNO('PJ');

            MERGE INTO PROJECT_MASTER A
		        USING DUAL
		           ON (A.PROJ_NO = #{proj_no})
		        WHEN MATCHED THEN
		        UPDATE SET
		               A.PROJ_NM = #{proj_nm}
		             , A.STRT_DT = TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{strt_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD')
		             , A.FNH_DT = TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{fnh_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD')
		             , A.ORDP_NM = #{ordp_nm}
		             , A.REM = #{rem}
		             , A.FIN_UPDR_ID = #{_loginId_}
		             , A.FIN_MDFY_DT = SYSDATE
		        WHEN NOT MATCHED THEN
		            INSERT (A.PROJ_NO, A.PROJ_NM,
		            		A.STRT_DT, A.FNH_DT,
		            		A.ORDP_NM, A.REM, A.VBG_CRE_USER_ID, A.VBG_CRE_DT, A.FIN_UPDR_ID, A.FIN_MDFY_DT)
		            VALUES (V_PROJ_NO,#{proj_nm},
		            		TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{strt_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD'),
		            		TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{fnh_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD'),
		            		#{ordp_nm},#{rem},#{_loginId_},SYSDATE,#{_loginId_},SYSDATE);
		    
		    DELETE FROM PROJECT_DETAIL
		    WHERE PROJ_NO = #{proj_no};
		    
		    INSERT INTO PROJECT_DETAIL (
		    	PROJ_NO,
		    	TRWI_HPW,
		    	REM,
		    	VBG_CRE_USER_ID,
				VBG_CRE_DT,
				FIN_UPDR_ID,
				FIN_MDFY_DT
		    )
		    SELECT
				V_PROJ_NO,
		    	COLUMN_VALUE,
		    	'',
				#{_loginId_},
				SYSDATE,
				#{_loginId_},
				SYSDATE
		    FROM TABLE(F_PVTROW(#{trwi_hpws},','));
        END
    }
    </insert>
    
    <insert id="deleteList" parameterType="map" >
        DELETE FROM PROJECT_MASTER
        WHERE PROJ_NO = #{proj_no}
    </insert>
</mapper>