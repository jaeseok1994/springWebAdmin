<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="proj.pms.pms01">

    <select id="selectList" parameterType="map" resultType="cMap">
	    <include refid="paging.head" /> <!-- 페이징 처리시 필수 -->
	    
	        SELECT
			    PROJ_NO,
			    PROJ_NM,
			    ST_DT,
			    FN_DT,
			    (SELECT
				F_PVTCOL(CURSOR(
				    SELECT DEV_MP
				      FROM TAPJMN
				     WHERE PROJ_NO = A.PROJ_NO
				),',') DEV_MPS
				FROM DUAL) DEV_MPS,
			    CLIENT,
			    REM,
			    UPD_USER_ID,
			    (SELECT USER_NAME FROM SYS_USER WHERE USER_ID = A.UPD_USER_ID) UPD_USER_NM,
			    TO_CHAR(UPD_DTM,'YYYY-MM-DD HH24:MI:SS') UPD_DTM
			FROM TAPRJM A
			WHERE 1=1
	        <if test="map.proj_no != '' and map.proj_no != null">
	           AND PROJ_NO LIKE '%' || #{map.proj_no} || '%'
	        </if>
	        <if test="map.proj_nm != '' and map.proj_nm != null">
	           AND PROJ_NM LIKE '%' || #{map.proj_nm} || '%'
	        </if>
	        <if test="map.dev_mp != '' and map.dev_mp != null">
	           AND EXISTS (
	           		SELECT 1
	           		FROM TAPJMN
	           		WHERE PROJ_NO = A.PROJ_NO
	           		AND DEV_MP LIKE '%' || #{map.dev_mp} || '%'
	           )
	        </if>
	        ORDER BY PROJ_NO
	        		
		<include refid="paging.bottom" /> <!-- 페이징 처리시 필수 -->
    </select>
    
    <insert id="maintList" parameterType="map" >
    {CALL
        DECLARE
			V_PROJ_NO VARCHAR2(20) := '';
        BEGIN
			/* 프로젝트번호 생성 */
			V_PROJ_NO := F_DOCNO('PJ');

            MERGE INTO TAPRJM A
		        USING DUAL
		           ON (A.PROJ_NO = #{proj_no})
		        WHEN MATCHED THEN
		        UPDATE SET
		               A.PROJ_NM = #{proj_nm}
		             , A.ST_DT = TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{st_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD')
		             , A.FN_DT = TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{fn_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD')
		             , A.CLIENT = #{client}
		             , A.REM = #{rem}
		             , A.UPD_USER_ID = #{_loginId_}
		             , A.UPD_DTM = SYSDATE
		        WHEN NOT MATCHED THEN
		            INSERT (A.PROJ_NO, A.PROJ_NM,
		            		A.ST_DT, A.FN_DT,
		            		A.CLIENT, A.REM, A.CRE_USER_ID, A.CRE_DTM, A.UPD_USER_ID, A.UPD_DTM)
		            VALUES (V_PROJ_NO,#{proj_nm},
		            		TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{st_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD'),
		            		TO_CHAR(TO_DATE(SUBSTR(REPLACE(#{fn_dt},'-'),1,8),'YYYYMMDD')+1,'YYYYMMDD'),
		            		#{client},#{rem},#{_loginId_},SYSDATE,#{_loginId_},SYSDATE);
		    
		    DELETE FROM TAPJMN
		    WHERE PROJ_NO = #{proj_no};
		    
		    INSERT INTO TAPJMN (
		    	PROJ_NO,
		    	DEV_MP,
		    	REM,
		    	CRE_USER_ID,
				CRE_DTM,
				UPD_USER_ID,
				UPD_DTM
		    )
		    SELECT
				V_PROJ_NO,
		    	COLUMN_VALUE,
		    	'',
				#{_loginId_},
				SYSDATE,
				#{_loginId_},
				SYSDATE
		    FROM TABLE(F_PVTROW(#{dev_mps},','));
        END
    }
    </insert>
    
    <insert id="deleteList" parameterType="map" >
        DELETE FROM TAPRJM
        WHERE PROJ_NO = #{proj_no}
    </insert>
</mapper>